{"version":3,"sources":["scripts/main.js"],"names":["ul","document","querySelector","employees","children","sortList","employeesList","sort","a","b","personA","convertToNumber","dataset","salary","personB","append","parseInt","slice","replaceAll","getEmployees","map","item","name","textContent","trim"],"mappings":";AAAA,aA6BA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3BA,IAAMA,EAAKC,SAASC,cAAc,MAC5BC,EAAgBH,EAAAA,EAAGI,UAEzB,SAASC,EAASC,GAChBA,EAAcC,KAAK,SAACC,EAAGC,GACfC,IAAAA,EAAUC,EAAgBH,EAAEI,QAAQC,QAGnCC,OAFSH,EAAgBF,EAAEG,QAAQC,QAEzBH,IAGnBV,EAAGe,OAAHf,MAAAA,EAAaM,EAAAA,IAGf,SAASK,EAAgBH,GAChBQ,OAAAA,SAASR,EAAES,MAAM,GAAGC,WAAW,IAAK,KAK7C,SAASC,EAAab,GACbA,OAAAA,EAAcc,IAAI,SAAAC,GAAI,OAAA,EAAA,CAC3BC,KAAMD,EAAKE,YAAYC,QACpBH,EAAKT,WALZP,EAASF,GASTgB,EAAahB","file":"main.13a65f70.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst ul = document.querySelector('ul');\nconst employees = [...ul.children];\n\nfunction sortList(employeesList) {\n  employeesList.sort((a, b) => {\n    const personA = convertToNumber(a.dataset.salary);\n    const personB = convertToNumber(b.dataset.salary);\n\n    return personB - personA;\n  });\n\n  ul.append(...employeesList);\n}\n\nfunction convertToNumber(a) {\n  return parseInt(a.slice(1).replaceAll(',', ''));\n}\n\nsortList(employees);\n\nfunction getEmployees(employeesList) {\n  return employeesList.map(item => ({\n    name: item.textContent.trim(),\n    ...item.dataset,\n  }));\n}\n\ngetEmployees(employees);\n"]}